<!DOCTYPE html>
<html> 
<head> 
  <meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate" />
  <meta http-equiv="Pragma" content="no-cache" />
  <meta http-equiv="Expires" content="0" />

  <link rel="stylesheet" type="text/css" href="https://nav.files.bbci.co.uk/orbit/ece9cb048f668bbc4cc6214737a6cdb6/css/orb-ltr.min.css" rel="stylesheet">

  <meta http-equiv="content-type" content="text/html; charset=UTF-8" /> 
  <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
  <title>Map Quiz Results</title> 
  <style>
  html, body {
    height: 100%;
    margin: 0px;
    padding: 0px
  }
  #map-canvas {
    height: 80%;
    margin: 0px;
    padding: 0px
  }
  .main {
   width:90%;
   padding:20px;
   font-size: 1.2em;
 }
 </style>
</head> 

<body>
	<div id="map" style="width: 1600px; height: 1600px;"></div>
	<!--<div id="map" style="width: 1600px; height: 1600px;"></div>-->
	<!--Try fullscreen ^-->

  <script type="text/javascript">
    var gameId =  JSON.parse("<%= JSON.stringify(gameId) %>".replace(/&#34;/g, '"'));
    var questions =  JSON.parse("<%= JSON.stringify(locations.myLocations) %>".replace(/&#34;/g, '"'));
    var questionCoords =  JSON.parse("<%= JSON.stringify(locations.myLocationCoords) %>".replace(/&#34;/g, '"'));
    var resultsData =  JSON.parse("<%= JSON.stringify(resultsData) %>".replace(/&#34;/g, '"'));

    //console.log("gameId=" + gameId);
    //console.log("questions=" + questions);
    //console.log("questionCoords=" + questionCoords);
    //console.log("resultsData=" + resultsData);

    var resultLocations = [];
    Object.keys(resultsData).sort().forEach(function(key) {
      //console.log('player=' + key + "___" + resultsData[key]);
      var lat = resultsData[key].resultCoordinates.replace("(", "").replace(")", "").split(',')[0];
      var lng = resultsData[key].resultCoordinates.replace("(", "").replace(")", "").split(',')[1];
      //console.log('_coords=' + lat + " " + lng);
      resultLocations.push([resultsData[key].resultId, lat, lng])
    });
  </script>

  <script type="text/javascript">
  var geocoder;
  var map;
  var addressCoordsMap = {};
  function initMap() {
    map = new google.maps.Map(document.getElementById('map'), {
      zoom: 3,
      center: {lat: -34.397, lng: 150.644},
      mapTypeId: google.maps.MapTypeId.ROADMAP
    });
    geocoder = new google.maps.Geocoder();
    //codeAddress(geocoder, map, null);

    var infowindow = new google.maps.InfoWindow();
    var marker, i;

    var locationMarker = new Map();
    for (i = 0; i < questions.length; i++) {
      var lat = questionCoords[i].replace("(", "").replace(")", "").split(',')[0];
      var lng = questionCoords[i].replace("(", "").replace(")", "").split(',')[1];

      marker = new google.maps.Marker({
    position: new google.maps.LatLng(lat, lng),
    map: map,
    icon: "beachflag.png"
    });
    locationMarker.set(questions[i], marker);
    //console.log("locationMarker=" + questions[i][0] + "____" +marker);
    //locationMarker.set(questions[i][0].replaceAll(" ", ""), marker);
  }

  // Display the results as markers
  var count_names = 0;
  var names_map = new Map();
  for (i = 0; i < resultLocations.length; i++) {  
    var name = resultLocations[i][0].split("_")[0]
    var name_number = 1
    if (names_map[name] != null) {
      name_number = names_map[name];
    } else {
      count_names += 1;
      name_number = count_names;
      names_map[name] = count_names;
    }
    var icon_image = "https://maps.google.com/mapfiles/kml/paddle/" + name_number + ".png"

    marker = new google.maps.Marker({
      position: new google.maps.LatLng(resultLocations[i][1], resultLocations[i][2]),
      map: map,
      label: name,
	    //icon: icon_image
    });

    var question = resultLocations[i][0].split("_")[1]
    //console.log("loc=" + resultLocations[i][0] + "+++ question=" + question)
    questionMarker = locationMarker.get(question)

    var line = new google.maps.Polyline({path: [marker.getPosition(), questionMarker.getPosition()], map: map});
    //var polylineLength = google.maps.geometry.spherical.computeLength(line.getPath()) / 1000;
    var polylineLength = haversine_distance(marker, questionMarker);
    resultLocations[i][2] = polylineLength;
    //console.log("errorish:" + question + " _____ " + questionMarker + "----" + polylineLength + "====" + resultLocations[i][2] + "==" + name)
    console.log("Location=" + question + " Distance=" + resultLocations[i][2] + " Name=" + name)

    google.maps.event.addListener(marker, 'click', (function(marker, i) {
      return function() {
        infowindow.setContent(resultLocations[i][0] + " (" + Math.round(resultLocations[i][2]) + " miles away)");
        infowindow.open(map, marker);
      }
    })(marker, i));
  }
}

  function haversine_distance(mk1, mk2) {
    var R = 3958.8; // Radius of the Earth in miles
    var rlat1 = mk1.position.lat() * (Math.PI/180); // Convert degrees to radians
    var rlat2 = mk2.position.lat() * (Math.PI/180); // Convert degrees to radians
    var difflat = rlat2-rlat1; // Radian difference (latitudes)
    var difflon = (mk2.position.lng()-mk1.position.lng()) * (Math.PI/180); // Radian difference (longitudes)

    var d = 2 * R * Math.asin(Math.sqrt(Math.sin(difflat/2)*Math.sin(difflat/2)+Math.cos(rlat1)*Math.cos(rlat2)*Math.sin(difflon/2)*Math.sin(difflon/2)));
    return d;
  }
  </script>

  <script async defer
      src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDtf3cvpiBnQrcjL0GUb1IkGkqLRhMQz7Y&libraries=geometry&region=GB&callback=initMap">
  </script>
</body>
</html>
